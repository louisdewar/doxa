on:  
  push:
    tags:
    - '*'

jobs:
  release-example-agent:
    name: release-example-agent
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: zip
      shell: bash
      run: |
        cd competitions/uttt
        sh ./build_getting_started_zip.sh
        mv uttt_getting_started.zip ../../
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: uttt_getting_started.zip
  build-release-cli:
    name: build-release-cli
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [linux, macos, win-gnu]
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
        - build: win-gnu
          os: windows-latest
          rust: nightly-x86_64-gnu
          target: x86_64-pc-windows-gnu
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    - name: Build release binary
      run: cargo build -p doxa_cli --release --target ${{ matrix.target }} --verbose

    - name: Strip release binary (linux and macos)
      if: matrix.build == 'linux' || matrix.build == 'macos'
      run: strip "target/${{ matrix.target }}/release/doxa_cli"
    - name: Build archive
      shell: bash
      run: |
        release_dir="./target/${{ matrix.target }}/release"
        release_name="doxa_cli-${{ matrix.target }}"

        bin_name=doxa_cli
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          bin_name=doxa_cli.exe
        fi

        cp "${release_dir}/doxa_cli" "${bin_name}"

        tar czf "${release_name}.tar.gz" "${bin_name}"
        echo "ASSET=${release_name}.tar.gz" >> $GITHUB_ENV
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.ASSET }}
